import { motion } from 'framer-motion'
import React, { useEffect, useState } from 'react'
import Details from '../Details/Details'
import Form from '../Form/Form'
import classes from './Bill.module.css'
import Logo from '../Header/Logo'
import axios from 'axios'
import WithErrorHandler from '../hoc/WithErrorHandler'

const Bill = props => {
	const [data, setData] = useState([])

	useEffect(() => {
		//check if data is available

		if (!props.history.location.data) {
			// console.log('eta bata redirect bhairacha bhai')
			return props.history.push('/order')
		}
		//make the data object into an array
		//loop thorugh the object

		const dummyArray = []
		for (var property in props.history.location.data) {
			if (props.history.location.data[property]) {
				console.log(property)
				dummyArray.push(property)
			}
		}
		setData([...data, dummyArray])
	}, [])
	// a function that sends data to the backend server / endpoint to create a order
	const submitForm = async formData => {
		console.log('Working FROM BILL MOFO')
		//accept formData and make the formdata HEre
		//we got seats DATA right here
		const seats = data[0].toString()
		console.log(formData)
		const SumbitData = {
			firstName: formData.firstName,
			lastName: formData.lastName,
			phoneNumber: formData.phoneNumber,
			email: formData.emailAddress,
			seats
		}
		try {
			//pass vanId on URL

			const res = await axios.post(
				`/api/order/verifyOrder/${props.history.location.plateNumber}`,
				SumbitData
			)

			props.history.push({
				pathname: '/viewOrder',
				res
			})
		} catch (error) {
			console.log(error)
		}

		//need to convert data[0] to string

		// await axios.post('/order/placeOrder', {
		// 	firstName: 'WASSUP',
		// 	lastName: 'GUT',
		// 	phoneNumber: 9803544549,
		// 	email: 'subin@gmail.com',
		// 	vanNumber: '1234567',
		// 	seats: [1, 2, 4]
		// })
	}
	//pass that function inside form
	//call the function from there
	const containerVariants = {
		initial: {
			x: '100vw'
		},
		final: {
			x: 0
		},
		exit: {
			x: '-100vw',
			transition: { ease: 'easeInOut' }
		}
	}

	return (
		<motion.div
			variants={containerVariants}
			initial='initial'
			animate='final'
			exit='exit'
			className={classes.mainContainer}
		>
			<div className={classes.formContainer}>
				<Form gottaGo={submitForm} />
			</div>
			<div className={classes.detailContainer}>
				<Details
					data={data}
					plateNumber={props.history.location.plateNumber}
					price={props.history.location.price}
				/>
			</div>
			<div className={classes.background}>
				<svg
					width='692'
					height='737'
					viewBox='0 0 692 737'
					fill='none'
					xmlns='http://www.w3.org/2000/svg'
				>
					<path
						fillRule='evenodd'
						clipRule='evenodd'
						d='M168.373 684.029L158.997 673.611C151.627 679.464 143.121 683.721 134.017 686.115C124.912 688.508 115.407 688.986 106.103 687.518L103.142 701.31C125.757 704.987 149.614 699.234 168.373 684.029ZM86.9091 696.937L91.3008 683.519C82.5715 679.994 74.6491 674.729 68.0167 668.045C61.3844 661.361 56.1812 653.398 52.7244 644.641L39.1882 648.955C43.1652 659.523 49.3864 669.442 57.8546 677.976C66.3709 686.559 76.3048 692.88 86.9091 696.937ZM34.9022 632.687L48.8412 629.808C47.4453 620.493 47.997 610.992 50.4616 601.907C52.9261 592.821 57.2497 584.348 63.1591 577.024L52.6559 567.422C37.2691 586.11 31.3429 609.995 34.9022 632.687ZM180.26 672.233L169.916 662.777C175.826 655.453 180.149 646.98 182.614 637.894C185.078 628.809 185.63 619.308 184.234 609.993L198.044 607.14C201.546 629.782 195.609 653.593 180.26 672.233ZM193.798 590.874C189.824 580.239 183.58 570.257 175.065 561.675C166.597 553.141 156.728 546.843 146.192 542.784L141.775 556.282C150.504 559.807 158.426 565.072 165.059 571.756C171.691 578.44 176.894 586.403 180.351 595.16L193.798 590.874ZM129.959 538.371C107.295 534.635 83.3658 540.373 64.5582 555.612L74.0781 566.19C81.448 560.338 89.9542 556.08 99.0588 553.686C108.163 551.293 117.668 550.815 126.972 552.283L129.959 538.371ZM117.889 594.449C112.569 594.062 107.304 595.307 102.82 598.189L85.5266 578.941C96.3129 570.797 109.887 567.251 123.291 569.077L117.889 594.449ZM139.312 608.153C138.17 605.911 136.665 603.787 134.736 601.843C132.807 599.9 130.696 598.378 128.462 597.219L136.462 572.645C142.44 575.151 148.052 578.866 152.934 583.786C157.817 588.707 161.487 594.347 163.947 600.345L139.312 608.153ZM157.255 651.23L138.141 633.787C141.058 629.326 142.345 624.071 141.999 618.748L167.413 613.543C169.134 626.961 165.482 640.507 157.255 651.23ZM115.187 645.352C120.507 645.739 125.772 644.494 130.256 641.612L147.549 660.86C136.763 669.004 123.188 672.55 109.785 670.724L115.187 645.352ZM93.7036 631.587C94.9057 633.89 96.4106 636.014 98.3394 637.958C100.268 639.902 102.38 641.423 104.674 642.643L96.6138 667.156C90.6353 664.65 85.0235 660.935 80.1412 656.015C75.2588 651.094 71.5882 645.454 69.1281 639.456L93.7036 631.587ZM75.8208 588.571L94.934 606.014C92.0173 610.475 90.7307 615.73 91.0765 621.053L65.6629 626.258C63.9511 613.128 67.4412 599.538 75.8208 588.571Z'
						fill='white'
					/>
					<path
						fillRule='evenodd'
						clipRule='evenodd'
						d='M346.784 171.123L348.923 157.271C339.728 155.264 331.05 151.369 323.438 145.831C315.825 140.293 309.443 133.233 304.695 125.097L292.14 131.528C303.596 151.369 323.141 166.21 346.784 171.123ZM285.26 116.188L298.43 111.103C295.639 102.112 294.706 92.6457 295.689 83.2809C296.671 73.916 299.548 64.8491 304.144 56.6331L292.241 48.8772C286.571 58.6419 282.823 69.7339 281.569 81.6909C280.308 93.7161 281.695 105.409 285.26 116.188ZM302.13 35.2678L313.177 44.2435C319.509 37.2703 327.217 31.6884 335.813 27.8506C344.409 24.0128 353.707 22.0027 363.117 21.9473L363.912 7.73848C339.704 7.64077 317.456 18.1577 302.13 35.2678ZM363.439 172.869L364.221 158.876C373.631 158.821 382.929 156.811 391.525 152.973C400.121 149.135 407.829 143.553 414.162 136.58L425.106 145.473C409.783 162.506 387.585 172.968 363.439 172.869ZM435.019 131.895C440.743 122.09 444.525 110.941 445.787 98.9165C447.041 86.9603 445.677 75.3329 442.157 64.6048L428.908 69.7202C431.699 78.7111 432.632 88.1776 431.65 97.5425C430.667 106.907 427.79 115.974 423.194 124.19L435.019 131.895ZM435.307 49.2396C423.867 29.322 404.286 14.417 380.587 9.48814L378.416 23.552C387.61 25.5589 396.288 29.4546 403.9 34.9926C411.513 40.5306 417.895 47.5905 422.643 55.7259L435.307 49.2396ZM384.237 75.36C381.172 70.9943 376.877 67.7043 371.809 66.0541L375.78 40.4847C388.911 43.6882 400.243 51.9596 407.306 63.4962L384.237 75.36ZM387.173 100.621C388.187 98.3184 388.88 95.8097 389.166 93.0862C389.452 90.3627 389.294 87.7648 388.779 85.3015L412.874 75.9545C414.713 82.1707 415.386 88.8668 414.663 95.7606C413.939 102.655 411.892 109.065 408.803 114.764L387.173 100.621ZM365.156 141.765L366.578 115.928C371.878 115.366 376.762 113.038 380.666 109.404L400.771 125.796C391.468 135.616 378.666 141.356 365.156 141.765ZM343.101 105.463C346.166 109.829 350.461 113.119 355.529 114.769L351.558 140.339C338.428 137.135 327.095 128.864 320.032 117.327L343.101 105.463ZM340.175 80.1171C339.151 82.505 338.458 85.0137 338.172 87.7372C337.887 90.4607 338.044 93.0586 338.55 95.607L314.465 104.869C312.625 98.6527 311.952 91.9566 312.676 85.0627C313.399 78.1689 315.446 71.7581 318.536 66.0589L340.175 80.1171ZM362.182 39.0584L360.761 64.8951C355.46 65.4578 350.576 67.785 346.672 71.4196L326.567 55.027C335.654 45.3966 348.387 39.5044 362.182 39.0584Z'
						fill='white'
					/>
					<path
						fillRule='evenodd'
						clipRule='evenodd'
						d='M584.429 439.808L586.567 425.957C577.373 423.95 568.695 420.055 561.082 414.517C553.469 408.979 547.087 401.919 542.34 393.783L529.785 400.214C541.241 420.055 560.786 434.896 584.429 439.808ZM522.904 384.874L536.075 379.789C533.284 370.798 532.351 361.332 533.333 351.967C534.315 342.602 537.192 333.535 541.788 325.319L529.885 317.563C524.215 327.328 520.468 338.42 519.213 350.377C517.952 362.402 519.339 374.095 522.904 384.874ZM539.775 303.954L550.821 312.929C557.153 305.956 564.861 300.374 573.458 296.536C582.054 292.699 591.351 290.689 600.762 290.633L601.556 276.424C577.349 276.327 555.1 286.844 539.775 303.954ZM601.083 441.555L601.865 427.562C611.276 427.507 620.573 425.496 629.169 421.659C637.766 417.821 645.474 412.239 651.806 405.266L662.75 414.159C647.428 431.191 625.23 441.654 601.083 441.555ZM672.663 400.581C678.387 390.776 682.17 379.627 683.431 367.602C684.685 355.646 683.321 344.019 679.801 333.291L666.552 338.406C669.343 347.397 670.276 356.864 669.294 366.228C668.312 375.593 665.435 384.66 660.839 392.876L672.663 400.581ZM672.952 317.926C661.511 298.008 641.931 283.103 618.231 278.174L616.06 292.238C625.254 294.245 633.932 298.14 641.545 303.678C649.158 309.216 655.54 316.276 660.287 324.412L672.952 317.926ZM621.882 344.046C618.817 339.68 614.522 336.39 609.454 334.74L613.425 309.171C626.555 312.374 637.887 320.646 644.951 332.182L621.882 344.046ZM624.817 369.307C625.832 367.004 626.525 364.496 626.81 361.772C627.096 359.049 626.939 356.451 626.424 353.987L650.518 344.64C652.358 350.857 653.03 357.553 652.307 364.447C651.584 371.34 649.537 377.751 646.447 383.45L624.817 369.307ZM602.801 410.451L604.222 384.614C609.522 384.052 614.406 381.724 618.311 378.09L638.416 394.482C629.112 404.302 616.31 410.042 602.801 410.451ZM580.745 374.149C583.81 378.515 588.105 381.805 593.173 383.455L589.202 409.025C576.072 405.821 564.74 397.55 557.676 386.013L580.745 374.149ZM577.819 348.803C576.795 351.191 576.102 353.7 575.817 356.423C575.531 359.147 575.688 361.744 576.194 364.293L552.109 373.555C550.269 367.339 549.597 360.642 550.32 353.749C551.043 346.855 553.09 340.444 556.18 334.745L577.819 348.803ZM599.826 307.744L598.405 333.581C593.105 334.144 588.221 336.471 584.316 340.105L564.211 323.713C573.298 314.082 586.032 308.19 599.826 307.744Z'
						fill='white'
					/>
				</svg>
			</div>
			<div className={classes.absolute}>
				<Logo />
			</div>
		</motion.div>
	)
}

export default WithErrorHandler(Bill, axios)
